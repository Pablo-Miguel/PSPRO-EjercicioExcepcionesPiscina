/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.mycompany.pspro.vista;

import com.mycompany.pspro.excepciones.CantidadFueraDeRangoException;
import com.mycompany.pspro.modelo.Piscina;
import com.mycompany.pspro.servicio.Servicio;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Nitro
 */
public class PanelPiscinas extends javax.swing.JPanel {
    
    private Piscina piscinaTemp;
    private Integer numAleat;
    
    /**
     * Creates new form PanelPiscinas
     */
    public PanelPiscinas() {
        initComponents();
        
        DefaultListModel<String> modeloPiscinas = new DefaultListModel<String>();
        
        ArrayList<Piscina> listaPiscinas = Servicio.getInstance().getPiscinas();
        
        modeloPiscinas.removeAllElements();
        
        for(int i = 0; i < listaPiscinas.size(); i++){
            modeloPiscinas.addElement((Math.round(listaPiscinas.get(i).MAX_NIVEL / 10) / 100.0) + "");
        }
        
        listPiscina.setModel(modeloPiscinas);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sdrCantidad = new javax.swing.JSlider();
        btnLlenar = new javax.swing.JToggleButton();
        btnVaciar = new javax.swing.JToggleButton();
        btnProbarPiscina = new javax.swing.JButton();
        lblTxtCapPiscina = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listPiscina = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        taDatos = new javax.swing.JTextArea();

        sdrCantidad.setMajorTickSpacing(100);
        sdrCantidad.setMaximum(1300);
        sdrCantidad.setMinorTickSpacing(10);
        sdrCantidad.setPaintLabels(true);
        sdrCantidad.setPaintTicks(true);
        sdrCantidad.setValue(0);
        sdrCantidad.setEnabled(false);

        btnLlenar.setBackground(new java.awt.Color(153, 255, 153));
        btnLlenar.setText("Llenar");
        btnLlenar.setToolTipText("");
        btnLlenar.setEnabled(false);
        btnLlenar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLlenarActionPerformed(evt);
            }
        });

        btnVaciar.setBackground(new java.awt.Color(255, 153, 153));
        btnVaciar.setText("Vaciar");
        btnVaciar.setEnabled(false);
        btnVaciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVaciarActionPerformed(evt);
            }
        });

        btnProbarPiscina.setBackground(new java.awt.Color(153, 153, 255));
        btnProbarPiscina.setText("Probar Piscina");
        btnProbarPiscina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProbarPiscinaActionPerformed(evt);
            }
        });

        lblTxtCapPiscina.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblTxtCapPiscina.setText("Capacidad de la Piscina en metros cúbicos");

        jScrollPane1.setViewportView(listPiscina);

        taDatos.setEditable(false);
        taDatos.setColumns(20);
        taDatos.setRows(5);
        jScrollPane2.setViewportView(taDatos);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(124, 124, 124)
                .addComponent(btnLlenar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnVaciar)
                .addGap(123, 123, 123))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(86, 86, 86)
                        .addComponent(lblTxtCapPiscina, javax.swing.GroupLayout.PREFERRED_SIZE, 391, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnProbarPiscina, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(202, 202, 202))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(sdrCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 769, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(130, 130, 130)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 537, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblTxtCapPiscina, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnProbarPiscina, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLlenar)
                    .addComponent(btnVaciar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(sdrCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnProbarPiscinaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProbarPiscinaActionPerformed
        if(listPiscina.isSelectionEmpty()){
            JOptionPane.showMessageDialog(this, "Porfavor, seleccione un valor de la lista");
        }
        else {
            piscinaTemp = Servicio.getInstance().getPiscina(new Piscina((int) (Double.parseDouble(listPiscina.getSelectedValue()) * 1000)));
            
            sdrCantidad.setMaximum(piscinaTemp.MAX_NIVEL);
            btnLlenar.setEnabled(true);
            btnVaciar.setEnabled(true);
            
            if(piscinaTemp.getNivel() == 0){
                taDatos.setText(taDatos.getText() + "Piscina " + piscinaTemp.MAX_NIVEL + "L está vacía: 0L\n");
                taDatos.setText(taDatos.getText() + "------------------------------------------------------------------------------------------------------------------\n");
            }
            else {
                taDatos.setText(taDatos.getText() + "Piscina " + piscinaTemp.MAX_NIVEL + "L -> Nivel actual de piscina: " + piscinaTemp.getNivel() + "L\n");
                taDatos.setText(taDatos.getText() + "------------------------------------------------------------------------------------------------------------------\n");
            }
        }
    }//GEN-LAST:event_btnProbarPiscinaActionPerformed

    private void btnLlenarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLlenarActionPerformed
        
        try {
            sdrCantidad.setValue(getRandom());
            piscinaTemp.llenar(sdrCantidad.getValue());
            taDatos.setText(taDatos.getText() + "Piscina " + piscinaTemp.MAX_NIVEL + "L -> Llenando: " + sdrCantidad.getValue() + "L \tNivel: " + piscinaTemp.getNivel() + "L\n");
            taDatos.setText(taDatos.getText() + "------------------------------------------------------------------------------------------------------------------\n");
        } catch (CantidadFueraDeRangoException ex) {
            taDatos.setText(taDatos.getText() + "Piscina " + piscinaTemp.MAX_NIVEL + "L -> Llenando: " + sdrCantidad.getValue() + "L \t" + ex.getMessage() + "\n");
            taDatos.setText(taDatos.getText() + "\t\t\tSe queda con " + piscinaTemp.getNivel() + "L\n");
            taDatos.setText(taDatos.getText() + "------------------------------------------------------------------------------------------------------------------\n");
        }
        
    }//GEN-LAST:event_btnLlenarActionPerformed

    private void btnVaciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVaciarActionPerformed
        
        try {
            sdrCantidad.setValue(getRandom());
            piscinaTemp.vaciar(sdrCantidad.getValue());
            taDatos.setText(taDatos.getText() + "Piscina " + piscinaTemp.MAX_NIVEL + "L -> Vaciando: " + sdrCantidad.getValue() + "L \tNivel: " + piscinaTemp.getNivel() + "L\n");
            taDatos.setText(taDatos.getText() + "------------------------------------------------------------------------------------------------------------------\n");
        } catch (CantidadFueraDeRangoException ex) {
            taDatos.setText(taDatos.getText() + "Piscina " + piscinaTemp.MAX_NIVEL + "L -> Vaciando: " + sdrCantidad.getValue() + "L \t" + ex.getMessage() + "\n");
            taDatos.setText(taDatos.getText() + "\t\t\tSe queda con " + piscinaTemp.getNivel() + "L\n");
            taDatos.setText(taDatos.getText() + "------------------------------------------------------------------------------------------------------------------\n");
        }
        
    }//GEN-LAST:event_btnVaciarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton btnLlenar;
    private javax.swing.JButton btnProbarPiscina;
    private javax.swing.JToggleButton btnVaciar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblTxtCapPiscina;
    private javax.swing.JList<String> listPiscina;
    private javax.swing.JSlider sdrCantidad;
    private javax.swing.JTextArea taDatos;
    // End of variables declaration//GEN-END:variables

    private int getRandom() {
        return (int) (Math.random() * 1000 + 1);
    }
}
